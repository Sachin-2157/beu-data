{
  "branches": [
    {
      "name": "Information Technology",
      "id": "IT",
      "icon": "project-diagram",
      "color": "#2196F3",
      "gradientColors": [
        "#2196F3",
        "#64B5F6"
      ],
      "description": "Software development, networking, and data management",
      "semesters": [
        {
          "id": 3,
          "name": "Semester 3",
          "subjectsCount": 6,
          "credits": 29,
          "subjects": [
            {
              "name": "Discrete Mathematics",
              "course_code": 106301,
              "credits": 4,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [
                  "Use mathematically correct terminology and notation.",
                  "Construct correct direct and indirect proofs.",
                  "Use division into cases in a proof.",
                  "Use counterexamples.",
                  "Apply logical reasoning to solve a variety of problems."
                ],
                "learningOutcomes": [
                  "For a given logic sentence express it in terms of predicates, quantifiers, and logical connectives.",
                  "For a given problem, derive the solution using deductive logic and prove the solution based on logical inference.",
                  "For a given mathematical problem, classify its algebraic structure.",
                  "Evaluate Boolean functions and simplify expressions using the properties of Boolean algebra",
                  "Develop the given problem as graph networks and solve with techniques of graph theory."
                ],
                "courseContent": "## Module 1: Lecture 6\n- Sets, Relation and Function: Operations and Laws of Sets, Cartesian Products, Binary Relation, Partial Ordering Relation, Equivalence Relation, Image of a Set, Sum and Product of Functions, Bijective functions, Inverse and Composite Function, Size of a Set, Finite and infinite Sets, Countable and uncountable Sets, Cantor’s diagonal argument and The Power Set theorem, Schroeder-Bernstein theorem.\n\n## Module 2: Lecture 8\n- Principles of Mathematical Induction: The Well-Ordering Principle, Recursive definition, The Division algorithm: Prime Numbers, The Greatest Common Divisor: Euclidean Algorithm, The Fundamental Theorem of Arithmetic.\n- Basic counting techniques-inclusion and exclusion, pigeon-hole principle, permutation and combination.\n\n## Module 3: Lecture 8\n- Propositional Logic: Syntax, Semantics, Validity and Satisfiability, Basic Connectives and Truth Tables, Logical Equivalence: The Laws of Logic, Logical Implication, Rules of Inference, The use of Quantifiers. Proof Techniques: Some Terminology, Proof Methods and Strategies, Forward Proof, Proof by Contradiction, Proof by Contraposition, Proof of Necessity and Sufficiency.\n\n## Module 4: Lecture 8\n- Algebraic Structures and Morphism: Algebraic Structures with one Binary Operation, Semi Groups, Monoids, Groups, Congruence Relation and Quotient Structures, Free and Cyclic Monoids and Groups, Permutation Groups, Substructures, Normal Subgroups, Algebraic Structures with two Binary Operation, Rings, Integral Domain and Fields. Boolean Algebra and Boolean Ring, Identities of Boolean Algebra, Duality, Representation of Boolean Function, Disjunctive and Conjunctive Normal Form\n\n## Module 5: Lecture 10\n- Graphs and Trees: Graphs and their properties, Degree, Connectivity, Path, Cycle, Sub Graph, Isomorphism, Eulerian and Hamiltonian Walks, Graph Coloring, Coloring maps, Planar Graphs, Coloring Vertices, Coloring Edges, List Coloring, Perfect Graph, definition properties and Example, rooted trees, trees and sorting, weighted trees and prefix codes, Bi-connected component and Articulation Points, Shortest distances.",
                "referenceBooks": [
                  "Kenneth H. Rosen, Discrete Mathematics and its Applications, Tata McGraw –Hill",
                  "Susanna S. Epp, Discrete Mathematics with Applications,4th edition, Wadsworth Publishing Co.Inc.",
                  "C L Liu and D P Mohapatra, Elements of Discrete Mathematics A Computer Oriented Approach, 3rd Edition by, Tata McGraw –Hill."
                ],
                "assessmentMethods": []
              }
            },
            {
              "name": "Data Structure and Algorithms",
              "course_code": 100304,
              "credits": 3,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [
                  "To impart the basic concepts of data structures and algorithms.",
                  "To understand concepts about searching and sorting techniques",
                  "To understand basic concepts about stacks, queues, lists trees and graphs.",
                  "To enable them to write algorithms for solving problems with the help of fundamental data structures"
                ],
                "learningOutcomes": [
                  "For a given algorithm student will able to analyze the algorithms to determine the time and computation complexity and justify the correctness.",
                  "For a given Search problem (Linear Search and Binary Search) student will able to implement it.",
                  "For a given problem of Stacks, Queues and linked list student will able to implement it and analyze the same to determine the time and computation complexity.",
                  "Student will able to write an algorithm Selection Sort, Bubble Sort, Insertion Sort, Quick Sort, Merge Sort, Heap Sort and compare their performance in term of Space and Time complexity.",
                  "Student will able to implement Graph search and traversal algorithms and determine the time and computation complexity."
                ],
                "courseContent": "## Module 1: Lecture 4\n- Introduction: Basic Terminologies: Elementary Data Organizations, Data Structure Operations: insertion, deletion, traversal etc.; Analysis of an Algorithm, Asymptotic Notations, Time-Space trade off.\n\n## Module 2: Lecture 10\n- Stacks and Queues: ADT Stack and its operations: Algorithms and their complexity analysis, Applications of Stacks: Expression Conversion and evaluation – corresponding algorithms and complexity analysis. ADT queue, Types of Queue: Simple Queue, Circular Queue, Priority Queue; Operations on each Type of Queues: Algorithms and their analysis.\n\n## Module 3: Lecture 6\n- Linked Lists: Singly linked lists: Representation in memory, Algorithms of several operations: Traversing, Searching, Insertion into, Deletion from linked list; Linked representation of Stack and Queue, Header nodes, doubly linked list: operations on it and algorithmic analysis; Circular Linked Lists: all operations their algorithms and the complexity analysis.\n\n## Module 4: Lecture 12\n- Searching, Sorting and Hashing: Linear Search and Binary Search Techniques and their complexityanalysis Objective and properties of different sorting algorithms: Selection Sort, Bubble Sort, Insertion Sort, Quick Sort, Merge Sort, Heap Sort; Performance and Comparison among all the methods, Hashing.\n\n## Module 5: Lecture 8\n- Trees: Basic Tree Terminologies, Different types of Trees: Binary Tree, Threaded Binary Tree, Binary Search Tree, AVLTree; Tree operations on each of the trees and their algorithms with complexity analysis. Applications of Binary Trees. B Tree, B+ Tree: definitions, algorithms andanalysis. Graph: Basic Terminologies and Representations, Graph search and traversal algorithms and complexity analysis.",
                "referenceBooks": [
                  "\"Fundamentals of Data Structures”, Illustrated Edition by Ellis Horowitz, SartajSahni, Computer SciencePress.",
                  "\"Data Structures and Program Design In C\", 2/E by Robert L. Kruse , Bruce P. Leung.",
                  "\"Data Structures\" by Schaum's Outlines.",
                  "\"Algorithms, Data Structures, and Problem Solving with C++\", Illustrated Edition by Mark Allen Weiss, Addison-Wesley Publishing Company.",
                  "\"How to Solve it by Computer\", 2nd Impression by R.G. Dromey, Pearson Education."
                ],
                "assessmentMethods": []
              }
            },
            {
              "name": "Digital Electronics",
              "course_code": 100305,
              "credits": 3,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [
                  "Understand working of logic families and logic gates.",
                  "Design and implement Combinational and Sequential logic circuits.",
                  "Understand the process of Analog to Digital conversion and Digital to Analog conversion.",
                  "Be able to use Programmable logic devices to implement the given logical problem."
                ],
                "learningOutcomes": [
                  "At the end of this course, students will demonstrate the ability to:"
                ],
                "courseContent": "## Module 1: Lecture 7 hrs.\n- Fundamentals of Digital Systems and logic families: Digital signals, digital circuits, AND, OR, NOT, NAND, NOR and Exclusive-OR operations, Boolean algebra, examples of IC gates, number systems-binary, signed binary, octal hexadecimal number, binary arithmetic, one’s and two’s complements arithmetic, codes, error detecting and correcting codes, characteristics of digital ICs, digital logic families, TTL, Schottky TTL and CMOS logic, interfacing CMOS and TTL, Tri - state logic.\n\n## Module 2: Lecture: 7 hrs.\n- Combinational Digital Circuits: Standard representation for logic functions K-map representation, simplification of logic functions using K-map, minimization of logical functions. Don’t care conditions, Multiplexer, DeMultiplexer/Decoders, Adders, Subtractors, BCD arithmetic, carry look ahead adder, serial adder, ALU, elementary ALU design, popular MSI chips, digital comparator, parity checker/generator, code converters, priority encoders, decoders/drivers for display devices, Q-M method of function realization.\n\n## Module 3: Lecture: 7 hrs.\n- Sequential circuits and systems: A 1-bit memory, the circuit properties of Bistable latch, the clocked SR flip flop, J- K, T and D types flip flops, application of flip flops, shift registers, applications of shift registers, serial to parallel converter, parallel to serial converter, ring counter, sequence generator, ripple (Asynchronous) counters, synchronous counters, counters design using flip flops, special counter ICs, asynchronous sequential counters, applications of counters.\n\n## Module 4: Lecture: 7 hrs.\n- A/D and D/A Converters: Digital to analog converters: weighted resistor/converter, R-2RLadder D/A converter, specifications for D/A converters, examples of D/A converter ICs, sample and hold circuit, analog to digital converters: quantization and encoding, parallel comparator A/D converter, successive approximation A/D converter, counting A/D converter, dual slope A/D converter, A/D converter using Voltage to frequency and voltage to time conversion, specifications of A/D converters, example of A/D converter ICs.\n\n## Module 5: Lecture 7 hrs.\n- Semiconductor memories and Programmable logic devices: Memory organization and operation, expanding memory size, classification and characteristics of memories, sequential memory, read only memory (ROM), read and write memory(RAM), content addressable memory (CAM), charge de coupled device memory (CCD), commonly used memory chips, ROM as a PLD, Programmable logic array (PLA), Programmable array logic (PAL), complex Programmable logic devices (CPLDs), Field Programmable Gate Array (FPGA).",
                "referenceBooks": [
                  "R. P. Jain, \"Modern Digital Electronics\", McGraw Hill Education, 2009.",
                  "M. M. Mano, \"Digital logic and Computer design\", Pearson Education India, 2016.",
                  "A. Kumar, \"Fundamentals of Digital Circuits\", Prentice Hall India, 2016."
                ],
                "assessmentMethods": []
              }
            },
            {
              "name": "Object Oriented Programming using C++",
              "course_code": 100313,
              "credits": 3,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [
                  "To impart the basic concepts of Object Oriented Programming.",
                  "To understand concepts about Classes and Data Abstraction",
                  "To understand basic concepts about Inheritance.",
                  "To enable them to write algorithms for solving problems using object oriented approach."
                ],
                "learningOutcomes": [
                  "An understanding of the concepts of inheritance and polymorphism.",
                  "An ability to overload operators in C++",
                  "An understanding of the difference between function overloading and function overriding",
                  "An ability to incorporate exception handling in object-oriented programs",
                  "An ability to use template classes.",
                  "An ability to write object-oriented programs of moderate complexity in C++"
                ],
                "courseContent": "## Module 1: Lecture: 3\nIntroduction to C++ : Object Oriented Technology, Advantages of OOP, Input- output in C++, Tokens, Keywords, Identifiers, Data Types C++, Derives data types. The void data type, Type Modifiers, Typecasting, Constant, Operator, Precedence of Operators, Strings.\n\n## Module 2: Lecture: 6\nControl Structures and Functions: Decision making statements like if-else, Nested if-else, goto, break, continue, switch case, Loop statement like for loop, nested for loop, while loop, do-while loop. Parts of Function, User- defined Functions, Value- Returning Functions, void Functions, Value Parameters, Function overloading, Virtual Functions.\n\n## Module 3: Lecture: 15\nClasses and Data Abstraction : Structure in C++, Class, Build- in Operations on Classes, Assignment Operator and Classes, Class Scope, Reference parameters and Class Objects (Variables), Member functions, Accessor and Mutator Functions, Constructors, default Constructor, Destructors.\n\n## Module 4: Lecture: 10\nOverloading, Templates and Inheritance: Operator Overloading, Function Overloading, Function Templates, Class Templates. Single and Multiple Inheritance, virtual Base class, Abstract Class, Pointer and Inheritance, Overloading Member Function.\n\n## Module 5: Lecture: 11\nPointers, Arrays and Exception Handling: Void Pointers, Pointer to Class, Pointer to Object, Void Pointer, Arrays. The keywords try, throw and catch. Creating own Exception Classes, Exception Handling Techniques (Terminate the Program, Fix the Error and Continue, Log the Error and Continue), Stack Unwinding.",
                "referenceBooks": [
                  "Thinking in C++, Volume 1 & 2 by Bruce Eckel, Chuck Allison, Pearson Education",
                  "Mastering C++, 1/e by Venugopal, Tata McGraw Hill.",
                  "Object Oriented Programming with C++, 3/e by E. Balaguruswamy, Tata McGraw Hill.",
                  "Starting Out with Object Oriented Programming in C++, by Tony Gaddis, Wiley India.",
                  "The C++ Programming language 3/e by Bjarne Stroustrup, Pearson Education.",
                  "C++, How to Programme, 4e, by Deitel, Pearson Education.",
                  "Big C++ by Cay Horstmann, Wiley India.",
                  "C++ Primer, 3e by Stanley B. Lippmann, JoseeLajoie, Pearson Education.",
                  "C++ and Object Oriented Programming Paradigm, 2e by Debasish Jana, PHI.",
                  "Programming with C++, 2/e by Ravichandran, Tata McGraw Hill.",
                  "C++ Programming Black Book by Steven Holzner, Dreamtech Press."
                ],
                "assessmentMethods": []
              }
            },
            {
              "name": "Mathematics -III \n(Differential Calculus)",
              "course_code": 100311,
              "credits": 3,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [],
                "learningOutcomes": [],
                "courseContent": "## Module 1 Lecture: 6 hrs.\n- Successive Differentiation, Leibnitz’s Theorem. Limit, Continuity and Differentiability of function for one variable.\n\n## Module 2 Lecture: 8 hrs.\n- Limit, Continuity and Differentiability of function for several variables. Partial Derivatives, Euler’s Theorem for Homogeneous functions, Total derivatives, Change of Variables. Maxima and Minima of Several Variables. Methods of Lagrange Multipliers. Taylor’s and Maclaurin’s Theorem with remainders of several variables.\n\n## Module 3 Lecture: 8 hrs.\n- Vector Calculus: Gradient, Divergence and Curl of a Vector and their Physical Interpretations, Vector Identities. Directional Derivatives. Line, Surface and Volume integrals, Application of Green’s, Stokes and Gauss Divergence Theorem (Without Proof).\n\n## Module 4 Lecture: 6 hrs.\n- First Order Ordinary Differential Equations: Exact, Linear and Bernoulli’s Equations, Euler’s Equations, Equations not of First Degree. Equations Solvable for P, Equations Solvable for Y, Equations Solvable for X and Clairaut’s Type.\n\n## Module 5 Lecture: 8 hrs.\n- Ordinary Differential Equations of Higher Orders: Second Order Linear Differential Equations with Variable Coefficients, Method of Variation of Parameters, Cauchy-Euler Equation; Power Series Solutions; Legendre Polynomials, Bessel Functions of the First Kind and their properties.\n\n## Module 6 Lecture: 6 hrs.\n- Partial Differential Equations – First Order: First Order Partial Differential Equations, Solutions of First Order Linear and Non-Linear PDEs.",
                "referenceBooks": [],
                "assessmentMethods": []
              }
            },
            {
              "name": "TECHNICAL WRITING",
              "course_code": 100314,
              "credits": 3,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [
                  "To understand the variety of structure of technical documents",
                  "To convey clearly, cogently and correctly, through written media, the technical aspects of a practice to audiences.",
                  "To recognize and use of the verbal and technical elements necessary for the successful practice of scientific and technical communication",
                  "To work collaboratively and individually to research, to analyze, and to write about, public debates regarding the conduct of science and technology"
                ],
                "learningOutcomes": [
                  "Student should able to demonstrate improved competence in Standard Written English, including grammar, sentence and paragraph structure, coherence and document design (including the use of the visual), and use this knowledge to revise texts.",
                  "Student should identify and practice the stages required to produce competent, professional writing through planning, drafting, revising, and editing.",
                  "It determine and implement the appropriate methods for each technical writing task.",
                  "Students learn to practice the ethical use of sources and the conventions of citation appropriate to each genre."
                ],
                "courseContent": "## Module 1 Lecture 10 hrs.\n- Introduction: Fundamentals of Technical Writing: Need for Clear and Concise Technical Writing, Attributes of Technical Writing, Types of Technical Writing, Benefits of Technical Communication, Technical, Managerial and General Readers, Expressing versus Impressing, Correct use of Noun, Pronoun, Verb, Adjective, Adverbs, Tense and Punctuation.\n\n## Module 2 Lecture 10 hrs.\n- Performing Technical Studies: Types of Technical Studies, General Methodology- Proposing a Project, Gathering Background Information, Designing Test Plans, Performing Experiments, Reporting Results, Writing Strategy: Analysis of Readers, Scope of Writing, Purpose and Objective. Document Options: Document Hierarchy, Report Types and Selection. Elements of Report Writing: Style and Appearance, Writing Presentation, Language Skills, Writing Style: Elements of Technical Communication Style, Recommended Style, Learn to Prepare Effective Illustrations\n\n## Module 3 Lecture 10 hrs.\n- Formal Reports: The Outline and Introduction (Outline, Title, Front Matter, Writing the Introduction), Writing the Body (Writing a Procedure, Describing Mechanism/Machines/Processes, Writing Test Results, Writing the Discussion Section), Closure (Conclusions, Recommendation, References, Abstract, Back Matter, Report Distribution, Saving and Storing Reports). Elements of an Informal Report, Investigation Reports, Service Activity Log, Lab. Reports and Proposals. Typical Memo Reports.\n\n## Module 4 Lecture 10 hrs.\n- Review and Editing: Types of Review and Edit, Review and Editing Methodology, Examples of Reviews. Oral Presentations: Types of Oral Presentations, Preparation, Visual Aids, Impediments to Technical Writing, Maintaining Writing Skills, Measuring Report Results.",
                "referenceBooks": [
                  "“Engineers’ Guide to Technical Writing”, Kenneth G. Budinski, ASM International.",
                  "“Handbook for Technical Writing”, James H. Shelton, NTC Contemporary Press",
                  "“The Technical Writer’s Handbook: Writing With Style and Clarity”, Matt Young, University Science Books"
                ],
                "assessmentMethods": []
              }
            }
          ]
        },
        {
          "id": 4,
          "name": "Semester 4",
          "subjectsCount": 4,
          "credits": 24,
          "subjects": [
            {
              "name": "Formal Language and Automata Theory",
              "course_code": 100406,
              "credits": 4,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [
                  "To develop a formal notation for strings, languages, and machines.",
                  "To design finite automata to accept a set of strings of a language.",
                  "To prove that a given language is regular and apply the closure properties of languages.",
                  "To design context-free grammars to generate strings from a context-free language and convert them into normal forms.",
                  "To prove equivalence of languages accepted by Push Down Automata and languages generated by context-free grammars.",
                  "To identify the hierarchy of formal languages, grammars, and machines.",
                  "To distinguish between computability and non-computability and Decidability and undesirability."
                ],
                "learningOutcomes": [],
                "courseContent": "## Module 1: Lecture 10 hrs\n- Introduction: Alphabet, languages and grammars, productions and derivation, Chomsky hierarchy of languages. Regular languages and finite automata: Regular expressions and languages, deterministic finite automata (DFA) and equivalence with regular expressions, nondeterministic finite automata (NFA) and equivalence with DFA, regular grammars and equivalence with finite automata, properties of regular languages, pumping lemma for regular languages, minimization of finite automata.\n\n## Module 2: Lecture 10 hrs\n- Context-free languages and pushdown automata: Context-free grammars (CFG) and Context-free languages (CFL), Chomsky and Greibach normal forms, nondeterministic pushdown automata (PDA) and equivalence with CFG, parse trees, ambiguity in CFG, pumping lemma for context-free languages, deterministic pushdown automata, closure properties of CFLs.\n\n## Module 3: Lecture 2 hrs\n- Context-sensitive languages: Context-sensitive grammars (CSG) and Context-sensitive languages, linear bounded automata and equivalence with CSG.\n\n## Module 4: Lecture 10 hrs\n- Turing machines: The basic model for Turing machines (TM), Turing recognizable (Recursively enumerable) and Turing-decidable (recursive) languages and their closure properties, variants of Turing machines, nondeterministic TMs and equivalence with deterministic TMs, unrestricted grammars and equivalence with Turing machines, TMs as enumerators.\n\n## Module 5: Lecture 8 hrs\n- Undecidability: Church-Turing thesis, universal Turing machine, the universal and diagonalization languages, reduction between languages and Rice’s theorem, undecidable problems about languages.",
                "referenceBooks": [
                  "John E. Hopcroft, Rajeev Motwani and Jeffrey D. Ullman, Introduction to Automata Theory, Languages, and Computation, Pearson Education Asia.",
                  "Harry R. Lewis and Christos H. Papadimitriou, Elements of the Theory of Computation, Pearson Education Asia.",
                  "Dexter C. Kozen, Automata and Computability, Undergraduate Texts in Computer Science, Springer.",
                  "Michael Sipser, Introduction to the Theory of Computation, PWS Publishing.",
                  "John Martin, Introduction to Languages and the Theory of Computation, Tata McGraw Hill."
                ],
                "assessmentMethods": []
              }
            },
            {
              "name": "Computer Organization and Architecture",
              "course_code": 106401,
              "credits": 3,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [
                  "How Computer Systems work & the basic principles.",
                  "Instruction Level Architecture and Instruction Execution.",
                  "The current state of art in memory system design.",
                  "How I/O devices are accessed and its principles.",
                  "To provide the knowledge on Instruction Level Parallelism.",
                  "To impart the knowledge on microprogramming.",
                  "Concepts of advanced pipeline techniques."
                ],
                "learningOutcomes": [],
                "courseContent": "## Module 1: Lecture 10\n- Functional blocks of a computer: CPU, memory, input-output subsystems, control unit. Instruction set architecture of a CPU – registers, instruction execution cycle, RTL interpretation of instructions, addressing modes, instruction set. Case study – instruction sets of some common CPUs. Data representation: signed number representation, fixed and floating point representations, character representation. Computer arithmetic – integer addition and subtraction, ripple carry adder, carry look-ahead adder, etc. multiplication – shift-and-add, Booth multiplier, carry save multiplier, etc. Division restoring and non-restoring techniques, floating point arithmetic.\n\n## Module 2: Lecture 14\n- Introduction to x86 architecture. CPU control unit design: hardwired and micro-programmed design approaches. Case study – design of a simple hypothetical CPU. Memory system design: semiconductor memory technologies, memory organization. Peripheral devices and their characteristics: Input-output subsystems, I/O device interface, I/O transfers – program controlled, interrupt driven and DMA, privileged and non-privileged instructions, software interrupts and exceptions. Programs and processes – role of interrupts in process state transitions, I/O device interfaces – SCSI, USB.\n\n## Module 3: Lecture 10\n- Pipelining: Basic concepts of pipelining, throughput and speedup, pipeline hazards. Parallel Processors: Introduction to parallel processors, Concurrent access to memory and cache coherency.\n\n## Module 4: Lecture 6\n- Memory organization: Memory interleaving, concept of hierarchical memory organization, cache memory, cache size vs. block size, mapping functions, replacement algorithms, write policies.",
                "referenceBooks": [
                  "Computer Organization and Design: The Hardware/Software Interface, 5th Edition by David A. Patterson and John L. Hennessy, Elsevier.",
                  "Computer Organization and Embedded Systems, 6th Edition by Carl Hamacher, McGraw Hill Higher Education.",
                  "Computer Architecture and Organization, 3rd Edition by John P. Hayes, WCB/McGraw-Hill.",
                  "Computer Organization and Architecture: Designing for Performance, 10th Edition by William Stallings, Pearson Education.",
                  "Computer System Design and Architecture, 2nd Edition by Vincent P. Heuring and Harry F. Jordan, Pearson Education."
                ],
                "assessmentMethods": []
              }
            },
            {
              "name": "Machine Learning",
              "course_code": 106403,
              "credits": 3,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [
                  "To learn the concept of how to learn patterns and concepts from data.",
                  "Design and analyze various machine learning algorithms and their applications in recent trends.",
                  "Evaluate the various factors of machine learning to measure the performance.",
                  "Understand basics of machine learning’s application in recent trends of technology."
                ],
                "learningOutcomes": [],
                "courseContent": "## UNIT 1\n- Introduction: Basic definitions, Linear Algebra, Statistical learning theory, types of learning, hypothesis space and Inductive bias, evaluation and cross-validation, Optimization.\n\n## UNIT 2\n- Statistical Decision Theory, Bayesian Learning (ML, MAP, Bayes estimates, Conjugate priors), Linear Regression, Ridge Regression, Lasso, Principal Component Analysis, Partial Least Squares.\n\n## UNIT 3\n- Linear Classification, Logistic Regression, Linear Discriminant Analysis, Quadratic Discriminant Analysis, Perceptron, Support Vector Machines + Kernels, Artificial Neural Networks + Back Propagation, Decision Trees, Bayes Optimal Classifier, Naive Bayes.\n\n## UNIT 4\n- Hypothesis testing, Ensemble Methods, Bagging, Adaboost Gradient Boosting, Clustering, K-means, K-medoids, Density-based Hierarchical, Spectral.\n\n## UNIT 5\n- Expectation Maximization, GMMs, Learning theory, Intro to Reinforcement Learning, Bayesian Networks.",
                "referenceBooks": [
                  "Machine Learning. Tom Mitchell. First Edition, McGraw-Hill, 1997.",
                  "Introduction to Machine Learning Edition 2, by Ethem Alpaydin.",
                  "J. Shavlik and T. Dietterich (Ed), Readings in Machine Learning, Morgan Kaufmann, 1990.",
                  "P. Langley, Elements of Machine Learning, Morgan Kaufmann, 1995.",
                  "Understanding Machine Learning. Shai Shalev-Shwartz and Shai Ben-David. Cambridge University Press. 2017.",
                  "The Elements of Statistical Learning. Trevor Hastie, Robert Tibshirani, and Jerome Friedman."
                ],
                "assessmentMethods": []
              }
            },
            {
              "name": "Database Management Systems",
              "course_code": 106405,
              "credits": 3,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [
                  "To understand the different issues involved in the design and implementation of a database system.",
                  "To study the physical and logical database designs, database modeling, relational, hierarchical, and network models.",
                  "To understand and use data manipulation language to query, update, and manage a database.",
                  "To develop an understanding of essential DBMS concepts such as database security, integrity, concurrency, distributed database, and intelligent database, Client/Server (Database Server), and Data Warehousing.",
                  "To design and build a simple database system and demonstrate competence with the fundamental tasks involved with modeling, designing, and implementing a DBMS."
                ],
                "learningOutcomes": [
                  "For a given query, write relational algebra expressions and optimize the developed expressions.",
                  "For a given specification of the requirement, design the database using E-R method and normalization.",
                  "For a given specification, construct the SQL queries for Open source and Commercial DBMS - MYSQL, ORACLE, and DB2.",
                  "For a given query, optimize its execution using Query optimization algorithms.",
                  "For a given transaction-processing system, determine the transaction atomicity, consistency, isolation, and durability.",
                  "Implement the isolation property, including locking, timestamp-based concurrency control, and Serializability of scheduling."
                ],
                "courseContent": "## Module 1: Lecture 6\n- Database system architecture: Data Abstraction, Data Independence, Data Definition Language (DDL), Data Manipulation Language (DML).\n- Data models: Entity-relationship model, network model, relational and object-oriented data models, integrity constraints, data manipulation operations.\n\n## Module 2: Lecture 10\n- Relational query languages: Relational algebra, Tuple and domain relational calculus, SQL3, DDL and DML constructs.\n- Open source and Commercial DBMS - MYSQL, ORACLE, DB2, SQL server.\n- Relational database design: Domain and data dependency, Armstrong’s axioms, Normal forms, Dependency preservation, Lossless design.\n- Query processing and optimization: Evaluation of relational algebra expressions, Query equivalence, Join strategies, Query optimization algorithms.\n\n## Module 3: Lecture 4\n- Storage strategies: Indices, B-trees, hashing.\n\n## Module 4: Lecture 8\n- Transaction processing: Concurrency control, ACID property, Serializability of scheduling, Locking and timestamp-based schedulers, Multi-version and optimistic Concurrency Control schemes, Database recovery.\n\n## Module 5: Lecture 6\n- Database Security: Authentication, Authorization and access control, DAC, MAC and RBAC models, Intrusion detection, SQL injection.\n\n## Module 6: Lecture 6\n- Advanced topics: Object-oriented and object-relational databases, Logical databases, Web databases, Distributed databases, Data warehousing, and data mining.",
                "referenceBooks": [
                  "Database System Concepts, 6th Edition by Abraham Silberschatz, Henry F. Korth, S. Sudarshan, McGraw-Hill.",
                  "Principles of Database and Knowledge – Base Systems, Vol 1 by J. D. Ullman, Computer Science Press.",
                  "Fundamentals of Database Systems, 5th Edition by R. Elmasri and S. Navathe, Pearson Education.",
                  "Foundations of Databases, Reprint by Serge Abiteboul, Richard Hull, Victor Vianu, Addison-Wesley."
                ],
                "assessmentMethods": []
              }
            },
            {
              "name": "Human Resource Development and Organizational Behaviour",
              "course_code": 100407,
              "credits": 3,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [],
                "learningOutcomes": [],
                "courseContent": null,
                "referenceBooks": [],
                "assessmentMethods": []
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Computer Science & Engineering",
      "id": "CSE",
      "icon": "code",
      "color": "#FFC107",
      "gradientColors": [
        "#FFC107",
        "#FFD700"
      ],
      "description": "Software development, algorithms, and computer systems",
      "semesters": [
        {
          "id": 3,
          "name": "Semester 3",
          "subjectsCount": 6,
          "credits": 24,
          "subjects": [
            {
              "name": "Analog Electronic Circuits",
              "course_code": 100302,
              "credits": 3,
              "type": "Core Subject",
              "syllabus": {
                "courseObjectives": [
                  "Understand diode circuits and their applications.",
                  "Analyze BJT and MOSFET circuits for amplification and switching.",
                  "Design and analyze operational amplifier-based circuits."
                ],
                "learningOutcomes": [
                  "Apply circuit analysis techniques to electronic circuits.",
                  "Evaluate amplifier performance parameters.",
                  "Implement analog circuit applications using operational amplifiers."
                ],
                "courseContent": "# Course Content\n\n## Unit 1: Diode Circuits\n- PN junction diode, rectifiers, clamping and clipping circuits (6 hrs)\n\n## Unit 2: BJT Circuits\n- Characteristics, small-signal models, biasing, amplifier configurations (8 hrs)\n\n## Unit 3: MOSFET Circuits\n- Structure, switching, amplifier models, gain analysis (6 hrs)\n\n## Unit 4: Operational Amplifiers\n- Differential amplifier, power amplifier, op-amp characteristics (4 hrs)\n\n## Unit 5: Op-Amp Applications\n- Inverting, non-inverting amplifiers, filters, oscillators (8 hrs)\n\n## Unit 6: Nonlinear Applications\n- Comparators, waveform generators, precision rectifiers (10 hrs)",
                "referenceBooks": [
                  "Microelectronic Circuits – A. S. Sedra & K. C. Smith",
                  "Introduction to Operational Amplifier Theory – J. V. Wait",
                  "The Art of Electronics – P. Horowitz & W. Hill"
                ],
                "assessmentMethods": [
                  "Mid-term examination: 30%",
                  "Final examination: 50%",
                  "Assignments and projects: 20%"
                ]
              }
            },
            {
              "name": "Data Structure & Algorithm",
              "course_code": 100304,
              "credits": 3,
              "type": "Core Subject",
              "syllabus": {
                "courseObjectives": [
                  "Understand data structures and their implementations.",
                  "Analyze algorithm complexity and performance.",
                  "Apply sorting, searching, and graph algorithms."
                ],
                "learningOutcomes": [
                  "Implement data structures like stacks, queues, and linked lists.",
                  "Analyze and optimize algorithms for efficiency.",
                  "Solve problems using trees and graphs."
                ],
                "courseContent": "# Course Content\n\n## Unit 1: Introduction\n- Data structure operations, algorithm complexity (7 hrs)\n\n## Unit 2: Stacks and Queues\n- ADT operations, applications, types of queues (7 hrs)\n\n## Unit 3: Linked Lists\n- Single, doubly, and circular linked lists (7 hrs)\n\n## Unit 4: Sorting and Searching\n- Bubble, Quick, Merge, Heap Sort; Binary and Linear Search (7 hrs)\n\n## Unit 5: Trees\n- Binary Trees, AVL Trees, B-Trees, applications (7 hrs)\n\n## Unit 6: Graphs\n- Representation, traversal algorithms (7 hrs)",
                "referenceBooks": [
                  "Data Structures and Algorithms in C++ – Mark Allen Weiss",
                  "Fundamentals of Data Structures – Ellis Horowitz",
                  "How to Solve it by Computer – R. G. Dromey"
                ],
                "assessmentMethods": [
                  "Mid-term examination: 30%",
                  "Final examination: 50%",
                  "Assignments and projects: 20%"
                ]
              }
            },
            {
              "name": "Object Oriented Programming using C++",
              "course_code": 100313,
              "credits": 3,
              "type": "Core Subject",
              "syllabus": {
                "courseObjectives": [
                  "Understand object-oriented programming concepts.",
                  "Implement classes, objects, inheritance, and polymorphism.",
                  "Develop applications using C++."
                ],
                "learningOutcomes": [
                  "Write C++ programs using OOP principles.",
                  "Apply function overloading and templates.",
                  "Implement exception handling and file handling in C++."
                ],
                "courseContent": "# Course Content\n\n## Unit 1: Introduction\n- OOP principles, data types, operators (7 hrs)\n\n## Unit 2: Control Structures and Functions\n- Decision making, loops, function overloading (8 hrs)\n\n## Unit 3: Classes and Data Abstraction\n- Constructors, destructors, member functions (8 hrs)\n\n## Unit 4: Inheritance and Templates\n- Operator overloading, function templates, multiple inheritance (5 hrs)\n\n## Unit 5: Pointers and Arrays\n- Pointers, array handling, file handling (7 hrs)\n\n## Unit 6: Exception Handling\n- Exception classes, handling techniques (7 hrs)",
                "referenceBooks": [
                  "Thinking in C++ – Bruce Eckel",
                  "Object-Oriented Programming with C++ – E. Balaguruswamy",
                  "The C++ Programming Language – Bjarne Stroustrup"
                ],
                "assessmentMethods": [
                  "Mid-term examination: 30%",
                  "Final examination: 50%",
                  "Assignments and projects: 20%"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Electrical Engineering",
      "id": "EE",
      "icon": "project-diagram",
      "color": "#7B1FA2",
      "gradientColors": [
        "#8E44AD",
        "#C39BD3"
      ],
      "description": "Energizing systems, crafting dynamic circuits, and powering future.",
      "semesters": [
        {
          "id": 3,
          "name": "Semester 3",
          "subjectsCount": 5,
          "credits": 26,
          "subjects": [
            {
              "name": "Electrical Circuit Analysis",
              "course_code": 100306,
              "credits": 4,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [],
                "learningOutcomes": [
                  "Apply Network Theorem for analysis of electrical circuits",
                  "Obtain the transient and steady-state response of electrical circuits",
                  "Analyze circuits in the Sinusoidal steady-state (Single-phase and three-phase)"
                ],
                "courseContent": "## Module 1: Network Theorems (10 Hours)\n- Superposition theorem, Thevenin theorem, Norton theorem, Maximum power transfer theorem, Reciprocity theorem, Compensation theorem.\n- Analysis with dependent current and voltage sources.\n- Node and Mesh Analysis.\n- Concept of duality and dual networks.\n\n## Module 2: Solution of First and Second Order Networks (8 Hours)\n- Solution of first and second order differential equations for Series and parallel R-L, R-C, R-L-C circuits.\n- Initial and final conditions in network elements.\n- Forced and free response, time constants.\n- Steady state and transient state response.\n\n## Module 3: Sinusoidal Steady State Analysis (8 Hours)\n- Representation of sine function as rotating phasor, phasor diagrams, impedances and admittances.\n- AC circuit analysis, effective or RMS values, average power and complex power.\n- Three-phase circuits.\n- Mutual coupled circuits, Dot Convention in coupled circuits.\n- Ideal Transformer.\n\n## Module 4: Electrical Circuit Analysis Using Laplace Transforms (8 Hours)\n- Review of Laplace Transform, Analysis of electrical circuits using Laplace Transform for standard inputs.\n- Convolution integral, inverse Laplace transform, transformed network with initial conditions.\n- Transfer function representation.\n- Poles and Zeros.\n- Frequency response (magnitude and phase plots), series and parallel resonances.\n\n## Module 5: Two Port Network and Network Functions (6 Hours)\n- Two Port Networks, terminal pairs, relationship of two port variables.\n- Impedance parameters, admittance parameters, transmission parameters, and hybrid parameters.\n- Interconnections of two port networks.",
                "referenceBooks": [
                  "M. E. Van Valkenburg, Network Analysis, Prentice Hall, 2006.",
                  "D. Roy Choudhury, Networks and Systems, New Age International Publications, 1998.",
                  "W. H. Hayt and J. E. Kemmerly, Engineering Circuit Analysis, McGraw Hill Education, 2013.",
                  "C. K. Alexander and M. N. O. Sadiku, Electric Circuits, McGraw Hill Education, 2004."
                ],
                "assessmentMethods": []
              }
            },
            {
              "name": "Analog Electronics Circuits",
              "course_code": 100302,
              "credits": 3,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [],
                "learningOutcomes": [
                  "Understand the characteristics of Transistors",
                  "Design and analyse various rectifier and amplifier circuits",
                  "Design sinusoidal and non-sinusoidal oscillators",
                  "Understand the functioning of OP-AMP and  design OP-AMP based circuits"
                ],
                "courseContent": "# Course Modules\n\n## Module 1: Diode Circuits (4 Hours)\n\n- P-N junction diode, I-V characteristics of a diode  \n- Review of half-wave and full-wave rectifiers  \n- Zener diodes, clamping, and clipping circuits  \n\n## Module 2: BJT Circuits (8 Hours)\n\n- Structure and I-V characteristics of a BJT  \n- BJT as a switch  \n- BJT as an amplifier: small-signal model, biasing circuits, current mirror  \n- Common-emitter, common-base, and common-collector amplifiers  \n- Small signal equivalent circuits, high-frequency equivalent circuits  \n\n## Module 3: MOSFET Circuits (8 Hours)\n\n- MOSFET structure and I-V characteristics  \n- MOSFET as a switch  \n- MOSFET as an amplifier: small-signal model and biasing circuits  \n- Common-source, common-gate, and common-drain amplifiers  \n- Small signal equivalent circuits: gain, input and output impedances, trans-conductance, high-frequency equivalent circuit  \n\n## Module 4: Differential, Multi-stage, and Operational Amplifiers (8 Hours)\n\n- Differential amplifier, power amplifier  \n- Direct coupled multi-stage amplifier  \n- Internal structure of an operational amplifier  \n- Ideal op-amp, non-idealities in an op-amp:  \n  - Output offset voltage  \n  - Input bias current  \n  - Input offset current  \n  - Slew rate  \n  - Gain bandwidth product  \n\n## Module 5: Linear Applications of Op-Amp (8 Hours)\n\n- Idealized analysis of op-amp circuits  \n- Inverting and non-inverting amplifier  \n- Differential amplifier, instrumentation amplifier, integrator, active filter  \n- P, PI, and PID controllers  \n- Lead/lag compensator using an op-amp  \n- Voltage regulator, oscillators (Wein bridge and phase shift)  \n- **Analog to Digital Conversion**  \n\n## Module 6: Nonlinear Applications of Op-Amp (6 Hours)\n\n- Hysteretic Comparator  \n- Zero Crossing Detector  \n- Square-wave and triangular-wave generators  \n- Precision rectifier, peak detector  \n- Monoshot  \n",
                "referenceBooks": [
                  "Sedra and Smith, Microelectronic Circuits, Oxford University Press, 2017.",
                  "Millman and Halkias, Integrated Electronics: Analog and Digital Circuits and Systems, McGraw Hill, 2010.",
                  "Boylestad and Nashelsky, Electronic Devices and Circuit Theory, Pearson, 2013.",
                  "Gray, Hurst, Lewis, and Meyer, Analysis and Design of Analog Integrated Circuits, Wiley, 2009."
                ],
                "assessmentMethods": []
              }
            },
            {
              "name": "Electrical Machines - 1",
              "course_code": 100302,
              "credits": 3,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [],
                "learningOutcomes": [
                  "Understand the concept of magnetic circuits",
                  "Understand the operation of DC machines",
                  "Analyse the difference in operation of different DC machine configurstions",
                  "Analyse single phase and three phase transformers circuits"
                ],
                "courseContent": "# Course Modules\n\n## Module 1: Magnetic Fields and Magnetic Circuits (6 Hours)\n\n- Review of magnetic circuits - MMF, flux, reluctance, inductance  \n- Review of Ampere Law and Biot-Savart Law  \n- Visualization of magnetic fields produced by a bar magnet and a current-carrying coil  \n  - Through air and through a combination of iron and air  \n  - Influence of highly permeable materials on the magnetic flux lines  \n\n## Module 2: Electromagnetic Force and Torque (9 Hours)\n\n- B-H curve of magnetic materials  \n- Flux-linkage vs current characteristic of magnetic circuits  \n- Linear and nonlinear magnetic circuits  \n- Energy stored in the magnetic circuit  \n- Force as a partial derivative of stored energy with respect to the position of a moving element  \n- Torque as a partial derivative of stored energy with respect to the angular position of a rotating element  \n- **Examples:** Galvanometer coil, relay contact, lifting magnet, rotating element with eccentricity or saliency  \n\n## Module 3: Transformers (12 Hours)\n\n- Principle, construction, and operation of single-phase transformers  \n- Equivalent circuit, phasor diagram, voltage regulation, losses, and efficiency  \n- **Testing:**  \n  - Open circuit and short circuit tests  \n  - Polarity test, back-to-back test  \n  - Separation of hysteresis and eddy current losses  \n- **Three-phase transformer:**  \n  - Construction, types of connection, and comparative features  \n  - Parallel operation of single-phase and three-phase transformers  \n- **Autotransformers:**  \n  - Construction, principle, applications, and comparison with two-winding transformers  \n- **Magnetizing current:**  \n  - Effect of nonlinear B-H curve of magnetic core material  \n  - Harmonics in magnetization current  \n- **Phase conversion:**  \n  - Scott connection, three-phase to six-phase conversion  \n- **Tap-changing transformers:**  \n  - No-load and on-load tap-changing of transformers  \n- **Three-winding transformers**  \n- **Cooling of transformers**  \n\n## Module 4: DC Machines (8 Hours)\n\n- Basic construction of a DC machine  \n- Magnetic structure: Stator yoke, stator poles, pole-faces or shoes, air gap, and armature core  \n- Visualization of the magnetic field produced by the field winding excitation with armature windings open  \n- Air gap flux density distribution, flux per pole, induced EMF in an armature coil  \n- **Armature winding and commutation:**  \n  - Elementary armature coil and commutator, lap and wave windings  \n  - Construction of commutator, linear commutation  \n- **Equations:**  \n  - Derivation of back EMF equation, armature MMF wave  \n  - Derivation of torque equation, armature reaction  \n  - Air gap flux density distribution with armature reaction  \n\n## Module 5: DC Machine - Motoring and Generation (7 Hours)\n\n- Armature circuit equation for motoring and generation  \n- Types of field excitations: Separately excited, shunt, and series  \n- **Open circuit characteristics of separately excited DC generator:**  \n  - Back EMF with armature reaction  \n  - Voltage build-up in a shunt generator  \n  - Critical field resistance and critical speed  \n- **V-I characteristics and torque-speed characteristics:**  \n  - Separately excited, shunt, and series motors  \n- **Speed control:**  \n  - Through armature voltage  \n- **Losses, load testing, and back-to-back testing of DC machines**  \n",
                "referenceBooks": [
                  "P. C. Sen, Principles of Electric Machines and Power Electronics, Wiley, 2013.",
                  "A. E. Fitzgerald, Charles Kingsley, and S. D. Umans, Electric Machinery, McGraw Hill, 2014.",
                  "J. B. Gupta, Theory and Performance of Electrical Machines, S. K. Kataria & Sons, 2019.",
                  "M. G. Say, Performance and Design of AC Machines, CBS Publishers, 2005.",
                  "P. S. Bimbhra, Electrical Machinery, Khanna Publishers, 2011."
                ],
                "assessmentMethods": []
              }
            },
            {
              "name": "Electromagnetics Fields",
              "course_code": 100308,
              "credits": 4,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [],
                "learningOutcomes": [
                  "Understand the basic law of Electromagnetism",
                  "To obtain the electric and magnetic fields for simple configurations under static conditions",
                  "Analyse time varying electric and magnetic fields.",
                  "Understand Maxwell's equation in different forms and different media."
                ],
                "courseContent": "# Course Modules\n\n## Module 1: Magnetic Fields and Magnetic Circuits (6 Hours)\n\n- Review of magnetic circuits - MMF, flux, reluctance, inductance  \n- Review of Ampere Law and Biot-Savart Law  \n- Visualization of magnetic fields produced by a bar magnet and a current-carrying coil  \n  - Through air and through a combination of iron and air  \n  - Influence of highly permeable materials on the magnetic flux lines  \n\n## Module 2: Electromagnetic Force and Torque (9 Hours)\n\n- B-H curve of magnetic materials  \n- Flux-linkage vs current characteristic of magnetic circuits  \n- Linear and nonlinear magnetic circuits  \n- Energy stored in the magnetic circuit  \n- Force as a partial derivative of stored energy with respect to the position of a moving element  \n- Torque as a partial derivative of stored energy with respect to the angular position of a rotating element  \n- **Examples:** Galvanometer coil, relay contact, lifting magnet, rotating element with eccentricity or saliency  \n\n## Module 3: Transformers (12 Hours)\n\n- Principle, construction, and operation of single-phase transformers  \n- Equivalent circuit, phasor diagram, voltage regulation, losses, and efficiency  \n- **Testing:**  \n  - Open circuit and short circuit tests  \n  - Polarity test, back-to-back test  \n  - Separation of hysteresis and eddy current losses  \n- **Three-phase transformer:**  \n  - Construction, types of connection, and comparative features  \n  - Parallel operation of single-phase and three-phase transformers  \n- **Autotransformers:**  \n  - Construction, principle, applications, and comparison with two-winding transformers  \n- **Magnetizing current:**  \n  - Effect of nonlinear B-H curve of magnetic core material  \n  - Harmonics in magnetization current  \n- **Phase conversion:**  \n  - Scott connection, three-phase to six-phase conversion  \n- **Tap-changing transformers:**  \n  - No-load and on-load tap-changing of transformers  \n- **Three-winding transformers**  \n- **Cooling of transformers**  \n\n## Module 4: DC Machines (8 Hours)\n\n- Basic construction of a DC machine  \n- Magnetic structure: Stator yoke, stator poles, pole-faces or shoes, air gap, and armature core  \n- Visualization of the magnetic field produced by the field winding excitation with armature windings open  \n- Air gap flux density distribution, flux per pole, induced EMF in an armature coil  \n- **Armature winding and commutation:**  \n  - Elementary armature coil and commutator, lap and wave windings  \n  - Construction of commutator, linear commutation  \n- **Equations:**  \n  - Derivation of back EMF equation, armature MMF wave  \n  - Derivation of torque equation, armature reaction  \n  - Air gap flux density distribution with armature reaction  \n\n## Module 5: DC Machine - Motoring and Generation (7 Hours)\n\n- Armature circuit equation for motoring and generation  \n- Types of field excitations: Separately excited, shunt, and series  \n- **Open circuit characteristics of separately excited DC generator:**  \n  - Back EMF with armature reaction  \n  - Voltage build-up in a shunt generator  \n  - Critical field resistance and critical speed  \n- **V-I characteristics and torque-speed characteristics:**  \n  - Separately excited, shunt, and series motors  \n- **Speed control:**  \n  - Through armature voltage  \n- **Losses, load testing, and back-to-back testing of DC machines**  \n",
                "referenceBooks": [
                  "P. C. Sen, Principles of Electric Machines and Power Electronics, Wiley, 2013.",
                  "A. E. Fitzgerald, Charles Kingsley, and S. D. Umans, Electric Machinery, McGraw Hill, 2014.",
                  "J. B. Gupta, Theory and Performance of Electrical Machines, S. K. Kataria & Sons, 2019.",
                  "M. G. Say, Performance and Design of AC Machines, CBS Publishers, 2005.",
                  "P. S. Bimbhra, Electrical Machinery, Khanna Publishers, 2011."
                ],
                "assessmentMethods": []
              }
            },
            {
              "name": "Electromagnetics Fields",
              "course_code": 100310,
              "credits": 4,
              "type": "Theory",
              "syllabus": {
                "courseObjectives": [
                  "Understand the concepts of coordinate systems.",
                  "Analyse three-dimensional motion.",
                  "Understand the concepts of rigid bodies.",
                  "Analyse the free-body diagrams of different arrangements.",
                  "Analyse torsional motion and bending moment."
                ],
                "learningOutcomes": [
                  "Understand the concepts of co-ordinate system",
                  "Understand the "
                ],
                "courseContent": "## **Module 1: Introduction to Vectors and Tensors and Coordinate Systems (5 hours)**  \nIntroduction to vectors and tensors and coordinate systems; Vector and tensor algebra; Indical notation; Symmetric and anti-symmetric tensors; Eigenvalues and Principal axes.\n\n## **Module 2: Three-Dimensional Rotation (4 hours)**  \nThree-dimensional rotation: Euler’s theorem, Axis-angle formulation and Euler angles; Coordinate transformation of vectors and tensors.\n\n---\n\n## **Module 3: Kinematics of Rigid Body (6 hours)**  \nKinematics of rigid bodies: Definition and motion of a rigid body; Rigid bodies as coordinate systems; Angular velocity of a rigid body, and its rate of change; Distinction between two- and three-dimensional rotational motion; Integration of angular velocity to find orientation; Motion relative to a rotating rigid body: Five-term acceleration formula.\n\n## **Module 4: Kinetics of Rigid Bodies (5 hours)**  \nKinetics of rigid bodies: Angular momentum about a point; Inertia tensor: Definition and computation, Principal moments and axes of inertia, Parallel and perpendicular axes theorems; Mass moment of inertia of symmetrical bodies, cylinder, sphere, cone etc.; Area moment of inertia and Polar moment of inertia, Forces and moments; Newton-Euler’s laws of rigid body motion.\n\n## **Module 5: Free Body Diagram (1 hour)**  \nFree body diagrams; Examples on modelling of typical supports and joints and discussion on the kinematic and kinetic constraints that they impose.\n\n---\n\n## **Module 6: General Motion (9 hours)**  \nExamples and problems. General planar motions. General 3-D motions. Free precession, Gyroscopes, Rolling cone.\n\n## **Module 7: Bending Moment (5 hours)**  \nTransverse loading on beams, shear force and bending moment in beams, analysis of cantilevers, simply supported beams and overhanging beams, relationships between loading, shear force and bending moment, shear force and bending moment diagrams.\n\n## **Module 8: Torsional Motion (2 hours)**  \nTorsion of circular shafts, derivation of torsion equation, stress and deformation in circular and hollow shafts.\n\n## **Module 9: Friction (3 hours)**  \nConcept of Friction; Laws of Coulomb friction; Angle of Repose; Coefficient of friction.",
                "referenceBooks": [
                  "J. L. Meriam and L. G. Kraige, *Engineering Mechanics: Dynamics*, Wiley, 2011.",
                  "M. F. Beatty, *Principles of Engineering Mechanics*, Springer Science & Business Media, 1986.",
                  "R. C. Hibbeler, *Engineering Mechanics: Statics and Dynamics*, Pearson, 2016.",
                  "Andy Ruina and Rudra Pratap, *Introduction to Statics and Dynamics*, Oxford University Press, 2011.",
                  "Ferdinand P. Beer, E. Russell Johnston Jr., *Vector Mechanics for Engineers: Statics and Dynamics*, McGraw-Hill, 2012.",
                  "S. Timoshenko and D. H. Young, *Engineering Mechanics*, McGraw-Hill, 1956.",
                  "Irving H. Shames, *Engineering Mechanics: Statics and Dynamics*, Pearson, 2006.",
                  "James G. Simmonds, *A Brief on Tensor Analysis*, Springer, 2012."
                ],
                "assessmentMethods": []
              }
            }
          ]
        }
      ]
    }
  ],
  "metadata": {
    "academicYear": "2024-2025",
    "appName": "Engineering Guru",
    "updatedAt": "2025-03-06"
  }
}